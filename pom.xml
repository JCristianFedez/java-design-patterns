<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <artifactId>design-patterns</artifactId>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>--enable-preview</argLine>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.0.0-M4</version>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <artifactId>junit-jupiter-engine</artifactId>
      <groupId>org.junit.jupiter</groupId>
      <scope>test</scope>
      <version>5.9.1</version>
    </dependency>

    <dependency>
      <artifactId>slf4j-api</artifactId>
      <groupId>org.slf4j</groupId>
      <version>2.0.6</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.3.3</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.3.3</version>
    </dependency>

    <!-- TODO Ver como hacer para usar LOG4j en lugar de logback -->
    <!--    <dependency>-->
    <!--      <groupId>log4j</groupId>-->
    <!--      <artifactId>log4j</artifactId>-->
    <!--      <version>1.2.17</version>-->
    <!--    </dependency>-->

    <dependency>
      <artifactId>lombok</artifactId>
      <groupId>org.projectlombok</groupId>
      <scope>compile</scope>
      <version>1.18.24</version>
    </dependency>
  </dependencies>
  <groupId>org.example</groupId>
  <modelVersion>4.0.0</modelVersion>
  <modules>
    <module>abstract-factory</module>
    <module>commons</module>
    <module>active-object</module>
    <module>acyclic-visitor</module>
    <module>bridge</module>
    <module>builder</module>
    <module>business-delegate</module>
    <module>callback</module>
    <module>chain-of-responsibility</module>
    <module>command</module>
    <module>composite</module>
    <module>decorators</module>
    <module>facade</module>
    <module>factory</module>
    <module>fly-weight</module>
    <module>iterator</module>
    <module>adapter</module>
    <module>memento</module>
    <module>observer</module>
    <module>prototype</module>
    <module>proxy</module>
    <module>singleton</module>
    <module>state</module>
    <module>strategy</module>
    <module>template-method</module>
    <module>visitor</module>
    <module>combinator</module>
    <module>composite-entity</module>
    <module>converter</module>
    <module>currying</module>
    <module>data-bus</module>
    <module>data-locality</module>
    <module>data-mapper</module>
    <module>delegation</module>
    <module>dependency-injection</module>
    <module>dirty-flag</module>
    <module>double-buffer</module>
    <module>double-checked-locking</module>
    <module>double-dispatch</module>
    <module>event-aggregator</module>
    <module>event-asynchronous</module>
    <module>event-driven-architecture</module>
    <module>event-queue</module>
    <module>event-sourcing</module>
    <module>execute-around</module>
    <module>extension-objects</module>
    <module>factory-kit</module>
    <module>factory-method</module>
    <module>fan-out-fan-in</module>
    <module>feature-toggle</module>
    <module>filterer</module>
    <module>fluent-interface</module>
    <module>flux</module>
    <module>front-controller</module>
    <module>game-loop</module>
    <module>guarded-suspension</module>
    <module>half-sync-half-async</module>
    <module>identity-map</module>
    <module>intercepting-filter</module>
    <module>interpreter</module>
    <module>lazy-loading</module>
    <module>leader-followers</module>
    <module>lockable-object</module>
    <module>marker</module>
    <module>master-worker</module>
    <module>mediator</module>
    <module>memento/memento-example-01</module>
    <module>memento/memento-example-02</module>
    <module>model-view-controller</module>
    <module>model-view-intent</module>
    <module>module</module>
    <module>monad</module>
    <module>monitor</module>
    <module>monostate</module>
    <module>multiton</module>
    <module>mute-idiom</module>
    <module>null-object</module>
    <module>object-mother</module>
    <module>object-pool</module>
    <module>observer/observer-example-01</module>
    <module>observer/observer-example-02</module>
    <module>parameter-object</module>
    <module>partial-response</module>
    <module>pipeline</module>
    <module>poison-pill</module>
    <module>presentation-model</module>
    <module>priority-queue</module>
    <module>private-class-data</module>
    <module>producer-consumer</module>
    <module>promise</module>
    <module>prototype/prototype-example-01</module>
    <module>prototype/prototype-example-02</module>
    <module>proxy/proxy-example-01</module>
    <module>proxy/proxy-example-02</module>
    <module>queue-load-leveling</module>
    <module>reactor</module>
    <module>reader-writer-lock</module>
    <module>registry</module>
    <module>resource-acquisition-is-initialization</module>
    <module>retry</module>
    <module>role-object</module>
    <module>saga-orchestration</module>
    <module>saga-choreography</module>
    <module>separated-interface</module>
    <module>servant</module>
    <module>service-locator</module>
    <module>service-to-worker</module>
    <module>sharding</module>
    <module>singleton/singleton-example-01</module>
    <module>singleton/singleton-example-02</module>
    <module>spatial-partition</module>
    <module>special-case</module>
    <module>state/state-example-01</module>
    <module>state/state-example-02</module>
    <module>step-builder</module>
    <module>strangler</module>
    <module>strategy/strategy-example-01</module>
    <module>strategy/strategy-example-02</module>
    <module>subclass-sandbox</module>
    <module>template-method/template-method-example-01</module>
    <module>template-method/template-method-example-02</module>
    <module>thread-local-storage</module>
    <module>thread-pool</module>
    <module>throttling</module>
    <module>tolerant-reader</module>
    <module>trampoline</module>
    <module>twin</module>
    <module>unit-of-work</module>
    <module>update-method</module>
    <module>visitor/visitor-example-01</module>
    <module>visitor/visitor-example-02</module>
    <module>cqrs</module>
  </modules>
  <packaging>pom</packaging>

  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
  </properties>

  <version>1.0-SNAPSHOT</version>

</project>